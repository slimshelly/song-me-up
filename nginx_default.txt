##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
	listen 443 ssl default_server;
	#listen 80 default_server;
	#listen [::]:80 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	#root /var/www/html;

	# Add index.php to the list if you are using PHP
	#index index.html index.htm index.nginx-debian.html;

	server_name smuapp.com www.smuapp.com;
	ssl on;
	ssl_certificate /etc/letsencrypt/live/smuapp.com/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/smuapp.com/privkey.pem;
	ssl_session_cache shared:SSL:10m;
	proxy_read_timeout 3600s;
	proxy_send_timeout 3600s;
	location / {
		proxy_pass http://smu_server;
		#proxy_pass ws://smu_server;
		#proxy_pass http://localhost:4567;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_redirect http:// https://;
		#proxy_redirect ws:// wss://;
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		#try_files $uri $uri/ =404;
	}

	#

    #listen 443 ssl; # managed by Certbot
    #ssl on;
    #ssl_session_cache shared:SSL:10m;    
    #ssl_certificate /etc/letsencrypt/live/smuapp.com/fullchain.pem; # managed by Certbot
    #ssl_certificate_key /etc/letsencrypt/live/smuapp.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


}
upstream smu_server { 
	server localhost:4567;
	
}

# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}

server {
    if ($host = www.smuapp.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = smuapp.com) {
       return 301 https://$host$request_uri;
    } # managed by Certbot


	listen 80 default_server;

    server_name smuapp.com www.smuapp.com;
    return 404; # managed by Certbot
}

